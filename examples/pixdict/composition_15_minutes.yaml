name: mysql_pixdict_ingestion_minutes
source_name: pixDict
source_type: mysql
description: mysql ingestion
secret_manager_uri: projects/modular-aileron-191222/secrets/dotz-mysql-prod
dataproc_config:
  machine_type: n1-standard-2
  num_workers: 0
  subnet: subnet-cluster-services
  parallelism: 60
  pip_packages: 
    - google-cloud-secret-manager
dag_parameters:
    dag_id: mysql_pixdict_ingestion_minutes
    description: Mysql ingestion for pixdict relational database.
    catchup: false
    schedule_interval: '*/15 * * * *'
    start_date:
      year: 2022
      month: 6
      day: 1
    tags:
      - framework:debussy_concert
      - project:example
      - source:mysql
      - type:ingestion
      - load:incremental
      - tier:2
    default_args:
      owner: debussy
ingestion_parameters: 
  - name: key_history_minutes
    extraction_query: > 
      SELECT `id`, `user_id`, `account_id`, `key_type`, `key`, `created`, `deleted`, `bonus_applied`
      FROM key_history
      WHERE (
        created > '{{ prev_execution_date.in_timezone("America/Sao_Paulo").strftime('%Y-%m-%d %H:00:00') }}'
        AND created <= '{{ execution_date.in_timezone("America/Sao_Paulo") }}'
      ) OR (
        deleted > '{{ prev_execution_date.in_timezone("America/Sao_Paulo").strftime('%Y-%m-%d %H:00:00') }}'
        AND deleted <= '{{ execution_date.in_timezone("America/Sao_Paulo") }}'
      )
    extract_connection_id: google_cloud_debussy
    raw_table_definition:  ${DEBUSSY_CONCERT__DAGS_FOLDER}/examples/pixdict/raw_table_def_pixdict_minutes.yaml
    data_partitioning:
      gcs_partition_schema: >-
        _flag_load=incr/_ts_window_start={{ prev_execution_date.in_timezone('America/Sao_Paulo').strftime('%Y-%m-%d %H:00:00')
        }}/_ts_window_end={{ execution_date.in_timezone('America/Sao_Paulo').strftime('%Y-%m-%d %H:%M:%S')
        }}/_ts_logical={{ execution_date.strftime('%Y-%m-%d %H:%M:%S%z')
        }}/_ts_ingestion={{ dag_run.start_date.strftime('%Y-%m-%d %H:%M:%S%z') }}
      destination_partition: "{{ prev_execution_date.in_timezone('America/Sao_Paulo').strftime('%Y%m%d%H') }}"